apply plugin: 'com.android.application'
apply plugin: 'realm-android'
apply plugin: 'android-aspectjx'


android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.android.baseproject"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        multiDexEnabled true
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'

//        ARouter 支持
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            renderscriptDebuggable true
        }
        debug {
            multiDexEnabled true
            debuggable false
            jniDebuggable false
            zipAlignEnabled true
            minifyEnabled true
//            shrinkResources true
            renderscriptDebuggable true
        }
    }


    sourceSets {
        main {
            res.srcDirs =
                    [
                            'src/main/res/layout/activity',
                            'src/main/res/layout/fragment',
                            'src/main/res/layout/item',
                            'src/main/res/layout/normal',
                            'src/main/res/layout/loading',
                            'src/main/res/layout',
                            'src/main/res'
                    ]
        }
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
//            outputFileName = new File(defaultConfig.applicationId + "-" + buildType.name + "-v" +
//                    defaultConfig.versionName + "-" + defaultConfig.versionCode + ".apk" ) )
            outputFileName = new File(defaultConfig.applicationId +"-" + buildType.name + "-v" +
                    defaultConfig.versionName + "-" + defaultConfig.versionCode + ".apk" )
        }
    }
}


aspectjx {
//    exclude 'com.firefly1126.permissionaspect/permissionaspect'
//    includeJarFilter  'DaggerBase/library','AspectJ'
//排除所有package路径中包含`android.support`的class文件及库（jar文件）
//    exclude 'com.alphawizard.hdwallet.alphahdwallet' // 这儿添加上你写aop代码所在的包名
    exclude 'android.support'
    exclude 'Realm'
    exclude  'realm'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // App's dependencies, including test
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"

    //ConstraintLayout
    implementation "com.android.support.constraint:constraint-layout:$rootProject.constraintLayoutVersion"

    // Dependencies for local unit tests
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation "junit:junit:$rootProject.junitVersion"

    // Android Testing Support Library's runner and rules
    androidTestImplementation "com.android.support.test:runner:$rootProject.ext.runnerVersion"

    // Espresso UI Testing
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"

    // Dagger dependencies
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$rootProject.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"

    //qiujuer tools
    implementation "net.qiujuer.genius:ui:$rootProject.ext.geniusVersion"
    implementation "net.qiujuer.genius:res:$rootProject.ext.geniusVersion"
    implementation "net.qiujuer.genius:kit-handler:$rootProject.ext.geniusVersion"

    //用来做底部面板
    implementation "net.qiujuer.widget:airpanel:$rootProject.ext.airpanelVersion"

    //    butter knife
    implementation "com.jakewharton:butterknife:$rootProject.ext.butterknifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.ext.butterknifeVersion"

    //导入 support中的控件以及主题
    implementation "com.android.support:design:$rootProject.ext.supportLibraryVersion"

    // ReactiveX
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.ext.rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.ext.rxAndroidVersion"

    // Http client
    implementation "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.ext.retrofitVersion"
    implementation "com.squareup.okhttp3:okhttp:$rootProject.ext.okhttpVersion"
    implementation "com.google.code.gson:gson:$rootProject.ext.gsonVersion"

    //lifecycle
    implementation "android.arch.lifecycle:runtime:$rootProject.ext.lifecycleVersion"
    implementation "android.arch.lifecycle:extensions:$rootProject.ext.lifecycleVersion"

    //    挺好用的  recyclerView的 adapter 的封装
    implementation "com.github.CymChad:BaseRecyclerViewAdapterHelper:$rootProject.ext.baseRecyclerViewAdapterHelper"

    //glide图片加载框架
    implementation "com.github.bumptech.glide:glide:$rootProject.ext.glideVersion"

    //    ARouter
    implementation "com.alibaba:arouter-api:$rootProject.ext.aRouterApi"
    annotationProcessor "com.alibaba:arouter-compiler:$rootProject.ext.aRouterCompiler"

    //  okgo
    implementation "com.lzy.net:okgo:$rootProject.ext.okgoVersion"
    implementation "com.lzy.net:okrx2:$rootProject.ext.okRxVersion"
    implementation "com.lzy.net:okserver:$rootProject.ext.okServer"

    //auto   size
    implementation "me.jessyan:autosize:$rootProject.ext.autoSIzeVersion"

    //event bus
    implementation "org.greenrobot:eventbus:$rootProject.ext.eventBus"

    // 配合 aop
    implementation "com.safframework.log:saf-log:$rootProject.ext.saf_log"
    implementation "com.safframework:saf-cache:$rootProject.ext.saf_cache"
    implementation "tony-common:tony-common-utils:$rootProject.ext.tony_common_utils"

    //  google提供的简化动态获取权限的库
    implementation "pub.devrel:easypermissions:$rootProject.ext.easyPermissionVersion"
    implementation project(':common')
    implementation project(':aop_lib')
}
